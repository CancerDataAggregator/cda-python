[build-system]
# Minimum requirements for the build system to execute.
requires = ["setuptools","wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cdapython"
version = "2023.9.12"
requires-python = ">=3.8"
authors = [ { name = 'cdadevs' } ]
maintainers = [ { name = 'cdadevs' } ]
description = "Python library for exploring CDA data"
readme = "README.md"
license = { text = "Apache License 2.0" }
dependencies = [
    "wheel >= 0.38.4",
    "urllib3 >= 1.26.8",
    "typing-extensions >= 4.4",
    "rich >= 13.2.0",
    "matplotlib >= 3.6.2",
    "pandas >= 1.5.3",
    "python-dotenv >= 0.18.0",
    "itables >= 1.1.2",
    "nbconvert >= 6.5.1",
    "Pillow >= 9.3.0",
    "notebook >= 6.4.12",
    "fastjsonschema >= 2.16.2",
    "jupyter-core >= 4.12",
    "pyzmq >= 25",
    'cda-client @ git+https://github.com/CancerDataAggregator/cda-service-python-client.git@code_review_testing',
    "lark == 1.*",
    "regex == 2022.*",
    "tornado == 6.*",
    "requests >= 2.31.0",
    "ipywidgets >= 7.6.5",
    "anyio == 3.*"
]

[project.urls]
Repository = "https://github.com/CancerDataAggregator/cda-python"

[tool.setuptools.packages.find]
where = ["."]
include = ["cdapython*"]

[tool.setuptools.package-data]
"" = [ ".env", ".lark" ]

[tool.poetry]
name = "cdapython"
version = "2023.9.12"
authors = ["cdadevs"]
description = ""
license = "Apache License"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.8,<=3.10"
wheel = ">=0.38.4"
urllib3 = "1.26.8"
typing-extensions = "4.4"
rich = "13.2.0"
matplotlib = "3.6.2"
pandas = ">=1.5.3"
python-dotenv = "0.18.0"
itables = "^1.1.2"
nbconvert = "6.5.1"
Pillow = "9.3.0"
notebook = ">=6.4.12"
fastjsonschema = "2.16.2"
jupyter-core = ">=4.12"
pyzmq = "25"
cda-client = { git = "https://github.com/CancerDataAggregator/cda-service-python-client.git", rev = "code_review_testing" }
lark = "^1.1.5"
regex = "^2022.10.31"
tornado = "^6.3.2"
requests = "^2.31.0"
ipywidgets = "7.6.5"
anyio = "^3.7.1"

[tool.poetry.dev-dependencies]
pytest = "7.2.0"
safety = "^2.1.1"
isort = "^5.10.1"
black = "^22.8.0"
mypy = "^0.971"
bandit = "^1.7.4"
flake8 = "^5.0.4"
pytest-cov = "^3.0.0"
certifi = "2022.12.7"
coverage = "7.0.5"
platformdirs="2.6.2"

[tool.poetry.group.dev.dependencies]
invoke = "^2.0.0"
watchdog = "^2.2.1"
pylint = "^2.17.2"
typeguard = "^4.0.0"

[tool.mypy]
ignore_missing_imports = true
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_ignores = true
show_column_numbers = true
follow_imports = "silent"


[tool.black]
line-length = 88
target-version = ['py37']

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.bandit]
targets = ["cdapython"]
exclude = ["venv", "ven3", "tests"]
skips = ["B101", "B601"]

[tool.pylint.messages_control]
max-line-length = 88

disable = [
    "too-many-public-methods",
    "invalid-name"
]

